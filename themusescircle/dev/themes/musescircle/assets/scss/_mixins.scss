// Arrow buttons
@mixin arrow-buttons {
	@include sizing(40px, 40px);
	border-radius: 100%;
	background: $color-06;
	padding: 10px;
	text-align: center;
	.icon {
		@include font-size(18px);
		@include transition(color 0.3s ease-in-out);			
	}
	&:hover .icon {
		color: $color-05;
	}	
}

// Flex 
@mixin flex($flow) {
	display: flex;
	flex-flow: $flow;
}

// Inline flex 
@mixin inline-flex($flow) {
	display: inline-flex;
	flex-flow: $flow;
}

// Font size conversion
@mixin font-size($size, $important: '') {
	@if $important != '' {	
		font-size: #{$size / 16px}rem !important;	
	} @else {
		font-size: #{$size / 16px}rem;
	}
}

// Calculation for gallery columns
@mixin gallery-columns($columns) {
	max-width: ((170 * $columns) * 1px);
	figure {
		flex: 1 1 ((100 / $columns) * 1%);
		max-width: ((100 / $columns) * 1%);		
	}	
}

// For stone-like muses background
@mixin muses-bg($border: '') {
	background: url($images + 'muses-bg.png') 0 0 repeat;
	background-attachment: fixed;
	@if $border == true {	
		border: 1px solid $color-05;	
	}	
}

// Muses icons
@mixin muses-icons($fs: '') {
	@if $fs != '' {	
		@include font-size($fs);		
	} @else {
		@include font-size(16px);
	}
    font-family: 'Muses Icons' !important;
    speak: none;    
    font-style: normal;
    font-weight: normal;
    font-variant: normal;
    text-transform: none;
    line-height: 1;
    -webkit-font-smoothing: antialiased;
    -moz-osx-font-smoothing: grayscale;
    @include inline-block(middle); 	
}

// Inline block
@mixin inline-block($vertical-align) {
	display: inline-block;
	vertical-align: $vertical-align;
}

// Placeholder 
// Examples: @include placeholder {}, :focus{@include placeholder {}}, or input {@include placeholder {}}
@mixin placeholder {
	&::-webkit-input-placeholder {@content}
	&:-moz-placeholder           {@content}
	&::-moz-placeholder          {@content}
	&:-ms-input-placeholder      {@content}  
}

// Responsive max-width media query
@mixin respond($breakpoint) {
	@media only screen and (max-width: $breakpoint + px) {
		@content;
	}
}

// Defining size for elements
@mixin sizing($width, $height) {
	width: $width;
	height: $height;
}

// Transition
@mixin transition($value) {
	-webkit-transition: $value;	
	-moz-transition: $value;	
	-o-transition: $value;	
	transition: $value;
}